{"id":"../node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","dependencies":[{"name":"/Users/ma20195/Desktop/lab/responsive-preview/package.json","includedInParent":true,"mtime":1553158678241},{"name":"/Users/ma20195/Desktop/lab/responsive-preview/.babelrc","includedInParent":true,"mtime":1553158651739},{"name":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/package.json","includedInParent":true,"mtime":1553153975726},{"name":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/.babelrc","includedInParent":true,"mtime":1489510989000},{"name":"raf","loc":{"line":11,"column":19},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/raf/index.js"},{"name":"dom-css","loc":{"line":15,"column":22},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/dom-css/index.js"},{"name":"preact","loc":{"line":19,"column":22},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact/dist/preact.mjs"},{"name":"../utils/isString","loc":{"line":21,"column":24},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/utils/isString.js"},{"name":"../utils/getScrollbarWidth","loc":{"line":25,"column":33},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/utils/getScrollbarWidth.js"},{"name":"../utils/returnFalse","loc":{"line":29,"column":27},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/utils/returnFalse.js"},{"name":"../utils/getInnerWidth","loc":{"line":33,"column":29},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/utils/getInnerWidth.js"},{"name":"../utils/getInnerHeight","loc":{"line":37,"column":30},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/utils/getInnerHeight.js"},{"name":"./styles","loc":{"line":41,"column":22},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/styles.js"},{"name":"./defaultRenderElements","loc":{"line":43,"column":37},"parent":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/index.js","resolved":"/Users/ma20195/Desktop/lab/responsive-preview/node_modules/preact-custom-scrollbars/lib/Scrollbars/defaultRenderElements.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _domCss = require('dom-css');\n\nvar _domCss2 = _interopRequireDefault(_domCss);\n\nvar _preact = require('preact');\n\nvar _isString = require('../utils/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _getScrollbarWidth = require('../utils/getScrollbarWidth');\n\nvar _getScrollbarWidth2 = _interopRequireDefault(_getScrollbarWidth);\n\nvar _returnFalse = require('../utils/returnFalse');\n\nvar _returnFalse2 = _interopRequireDefault(_returnFalse);\n\nvar _getInnerWidth = require('../utils/getInnerWidth');\n\nvar _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);\n\nvar _getInnerHeight = require('../utils/getInnerHeight');\n\nvar _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);\n\nvar _styles = require('./styles');\n\nvar _defaultRenderElements = require('./defaultRenderElements');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Scrollbars = function (_Component) {\n  _inherits(Scrollbars, _Component);\n\n  function Scrollbars() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Scrollbars);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Scrollbars.__proto__ || Object.getPrototypeOf(Scrollbars)).call.apply(_ref, [this].concat(args))), _this), _this.refs = {}, _this.state = {\n      didMountUniversal: false\n    }, _this.componentDidMount = function () {\n      _this.addListeners();\n      _this.update();\n      _this.componentDidMountUniversal();\n    }, _this.componentDidUpdate = function () {\n      _this.update();\n    }, _this.componentWillUnmount = function () {\n      _this.unsetDomStyles();\n      _this.removeListeners();\n      (0, _raf.cancel)(_this.requestFrame);\n      clearTimeout(_this.hideTracksTimeout);\n      clearInterval(_this.detectScrollingInterval);\n    }, _this.getScrollLeft = function () {\n      var view = _this.refs.view;\n\n      return view.scrollLeft;\n    }, _this.getScrollTop = function () {\n      var view = _this.refs.view;\n\n      return view.scrollTop;\n    }, _this.getScrollWidth = function () {\n      var view = _this.refs.view;\n\n      return view.scrollWidth;\n    }, _this.getScrollHeight = function () {\n      var view = _this.refs.view;\n\n      return view.scrollHeight;\n    }, _this.getClientWidth = function () {\n      var view = _this.refs.view;\n\n      return view.clientWidth;\n    }, _this.getClientHeight = function () {\n      var view = _this.refs.view;\n\n      return view.clientHeight;\n    }, _this.getValues = function () {\n      var view = _this.refs.view;\n      var scrollLeft = view.scrollLeft,\n          scrollTop = view.scrollTop,\n          scrollWidth = view.scrollWidth,\n          scrollHeight = view.scrollHeight,\n          clientWidth = view.clientWidth,\n          clientHeight = view.clientHeight;\n\n\n      return {\n        left: scrollLeft / (scrollWidth - clientWidth) || 0,\n        top: scrollTop / (scrollHeight - clientHeight) || 0,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth,\n        scrollHeight: scrollHeight,\n        clientWidth: clientWidth,\n        clientHeight: clientHeight\n      };\n    }, _this.getThumbHorizontalWidth = function () {\n      var _this$props = _this.props,\n          thumbSize = _this$props.thumbSize,\n          thumbMinSize = _this$props.thumbMinSize;\n      var _this$refs = _this.refs,\n          view = _this$refs.view,\n          trackHorizontal = _this$refs.trackHorizontal;\n      var scrollWidth = view.scrollWidth,\n          clientWidth = view.clientWidth;\n\n      var trackWidth = (0, _getInnerWidth2[\"default\"])(trackHorizontal);\n      var width = Math.ceil(clientWidth / scrollWidth * trackWidth);\n      if (trackWidth === width) return 0;\n      if (thumbSize) return thumbSize;\n      return Math.max(width, thumbMinSize);\n    }, _this.getThumbVerticalHeight = function () {\n      var _this$props2 = _this.props,\n          thumbSize = _this$props2.thumbSize,\n          thumbMinSize = _this$props2.thumbMinSize;\n      var _this$refs2 = _this.refs,\n          view = _this$refs2.view,\n          trackVertical = _this$refs2.trackVertical;\n      var scrollHeight = view.scrollHeight,\n          clientHeight = view.clientHeight;\n\n      var trackHeight = (0, _getInnerHeight2[\"default\"])(trackVertical);\n      var height = Math.ceil(clientHeight / scrollHeight * trackHeight);\n      if (trackHeight === height) return 0;\n      if (thumbSize) return thumbSize;\n      return Math.max(height, thumbMinSize);\n    }, _this.getScrollLeftForOffset = function (offset) {\n      var _this$refs3 = _this.refs,\n          view = _this$refs3.view,\n          trackHorizontal = _this$refs3.trackHorizontal;\n      var scrollWidth = view.scrollWidth,\n          clientWidth = view.clientWidth;\n\n      var trackWidth = (0, _getInnerWidth2[\"default\"])(trackHorizontal);\n      var thumbWidth = _this.getThumbHorizontalWidth();\n      return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);\n    }, _this.getScrollTopForOffset = function (offset) {\n      var _this$refs4 = _this.refs,\n          view = _this$refs4.view,\n          trackVertical = _this$refs4.trackVertical;\n      var scrollHeight = view.scrollHeight,\n          clientHeight = view.clientHeight;\n\n      var trackHeight = (0, _getInnerHeight2[\"default\"])(trackVertical);\n      var thumbHeight = _this.getThumbVerticalHeight();\n      return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);\n    }, _this.scrollLeft = function () {\n      var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var view = _this.refs.view;\n\n      view.scrollLeft = left;\n    }, _this.scrollTop = function () {\n      var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var view = _this.refs.view;\n\n      view.scrollTop = top;\n    }, _this.scrollToLeft = function () {\n      var view = _this.refs.view;\n\n      view.scrollLeft = 0;\n    }, _this.scrollToTop = function () {\n      var view = _this.refs.view;\n\n      view.scrollTop = 0;\n    }, _this.scrollToRight = function () {\n      var view = _this.refs.view;\n\n      view.scrollLeft = view.scrollWidth;\n    }, _this.scrollToBottom = function () {\n      var view = _this.refs.view;\n\n      view.scrollTop = view.scrollHeight;\n    }, _this.addListeners = function () {\n      /* istanbul ignore if */\n      if (typeof document === 'undefined') return;\n      var _this$refs5 = _this.refs,\n          view = _this$refs5.view,\n          trackHorizontal = _this$refs5.trackHorizontal,\n          trackVertical = _this$refs5.trackVertical,\n          thumbHorizontal = _this$refs5.thumbHorizontal,\n          thumbVertical = _this$refs5.thumbVertical;\n\n      view.addEventListener('scroll', _this.handleScroll);\n      if (!(0, _getScrollbarWidth2[\"default\"])()) return;\n      trackHorizontal.addEventListener('mouseenter', _this.handleTrackMouseEnter);\n      trackHorizontal.addEventListener('mouseleave', _this.handleTrackMouseLeave);\n      trackHorizontal.addEventListener('mousedown', _this.handleHorizontalTrackMouseDown);\n      trackVertical.addEventListener('mouseenter', _this.handleTrackMouseEnter);\n      trackVertical.addEventListener('mouseleave', _this.handleTrackMouseLeave);\n      trackVertical.addEventListener('mousedown', _this.handleVerticalTrackMouseDown);\n      thumbHorizontal.addEventListener('mousedown', _this.handleHorizontalThumbMouseDown);\n      thumbVertical.addEventListener('mousedown', _this.handleVerticalThumbMouseDown);\n      window.addEventListener('resize', _this.handleWindowResize);\n    }, _this.removeListeners = function () {\n      /* istanbul ignore if */\n      if (typeof document === 'undefined') return;\n      var _this$refs6 = _this.refs,\n          view = _this$refs6.view,\n          trackHorizontal = _this$refs6.trackHorizontal,\n          trackVertical = _this$refs6.trackVertical,\n          thumbHorizontal = _this$refs6.thumbHorizontal,\n          thumbVertical = _this$refs6.thumbVertical;\n\n      view.removeEventListener('scroll', _this.handleScroll);\n      if (!(0, _getScrollbarWidth2[\"default\"])()) return;\n      trackHorizontal.removeEventListener('mouseenter', _this.handleTrackMouseEnter);\n      trackHorizontal.removeEventListener('mouseleave', _this.handleTrackMouseLeave);\n      trackHorizontal.removeEventListener('mousedown', _this.handleHorizontalTrackMouseDown);\n      trackVertical.removeEventListener('mouseenter', _this.handleTrackMouseEnter);\n      trackVertical.removeEventListener('mouseleave', _this.handleTrackMouseLeave);\n      trackVertical.removeEventListener('mousedown', _this.handleVerticalTrackMouseDown);\n      thumbHorizontal.removeEventListener('mousedown', _this.handleHorizontalThumbMouseDown);\n      thumbVertical.removeEventListener('mousedown', _this.handleVerticalThumbMouseDown);\n      window.removeEventListener('resize', _this.handleWindowResize);\n      // Possibly setup by `handleDragStart`\n      _this.teardownDragging();\n    }, _this.handleScroll = function (event) {\n      var _this$props3 = _this.props,\n          onScroll = _this$props3.onScroll,\n          onScrollFrame = _this$props3.onScrollFrame;\n\n      if (onScroll) onScroll(event);\n      _this.update(function (values) {\n        var scrollLeft = values.scrollLeft,\n            scrollTop = values.scrollTop;\n\n        _this.viewScrollLeft = scrollLeft;\n        _this.viewScrollTop = scrollTop;\n        if (onScrollFrame) onScrollFrame(values);\n      });\n      _this.detectScrolling();\n    }, _this.handleScrollStart = function () {\n      var onScrollStart = _this.props.onScrollStart;\n\n      if (onScrollStart) onScrollStart();\n      _this.handleScrollStartAutoHide();\n    }, _this.handleScrollStartAutoHide = function () {\n      var autoHide = _this.props.autoHide;\n\n      if (!autoHide) return;\n      _this.showTracks();\n    }, _this.handleScrollStop = function () {\n      var onScrollStop = _this.props.onScrollStop;\n\n      if (onScrollStop) onScrollStop();\n      _this.handleScrollStopAutoHide();\n    }, _this.handleScrollStopAutoHide = function () {\n      var autoHide = _this.props.autoHide;\n\n      if (!autoHide) return;\n      _this.hideTracks();\n    }, _this.handleWindowResize = function () {\n      _this.update();\n    }, _this.handleHorizontalTrackMouseDown = function (event) {\n      event.preventDefault();\n      var view = _this.refs.view;\n      var target = event.target,\n          clientX = event.clientX;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          targetLeft = _target$getBoundingCl.left;\n\n      var thumbWidth = _this.getThumbHorizontalWidth();\n      var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;\n      view.scrollLeft = _this.getScrollLeftForOffset(offset);\n    }, _this.handleVerticalTrackMouseDown = function (event) {\n      event.preventDefault();\n      var view = _this.refs.view;\n      var target = event.target,\n          clientY = event.clientY;\n\n      var _target$getBoundingCl2 = target.getBoundingClientRect(),\n          targetTop = _target$getBoundingCl2.top;\n\n      var thumbHeight = _this.getThumbVerticalHeight();\n      var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;\n      view.scrollTop = _this.getScrollTopForOffset(offset);\n    }, _this.handleHorizontalThumbMouseDown = function (event) {\n      event.preventDefault();\n      _this.handleDragStart(event);\n      var target = event.target,\n          clientX = event.clientX;\n      var offsetWidth = target.offsetWidth;\n\n      var _target$getBoundingCl3 = target.getBoundingClientRect(),\n          left = _target$getBoundingCl3.left;\n\n      _this.prevPageX = offsetWidth - (clientX - left);\n    }, _this.handleVerticalThumbMouseDown = function (event) {\n      event.preventDefault();\n      _this.handleDragStart(event);\n      var target = event.target,\n          clientY = event.clientY;\n      var offsetHeight = target.offsetHeight;\n\n      var _target$getBoundingCl4 = target.getBoundingClientRect(),\n          top = _target$getBoundingCl4.top;\n\n      _this.prevPageY = offsetHeight - (clientY - top);\n    }, _this.setupDragging = function () {\n      (0, _domCss2[\"default\"])(document.body, _styles.disableSelectStyle);\n      document.addEventListener('mousemove', _this.handleDrag);\n      document.addEventListener('mouseup', _this.handleDragEnd);\n      document.onselectstart = _returnFalse2[\"default\"];\n    }, _this.teardownDragging = function () {\n      (0, _domCss2[\"default\"])(document.body, _styles.disableSelectStyleReset);\n      document.removeEventListener('mousemove', _this.handleDrag);\n      document.removeEventListener('mouseup', _this.handleDragEnd);\n      document.onselectstart = undefined;\n    }, _this.handleDragStart = function (event) {\n      _this.dragging = true;\n      event.stopImmediatePropagation();\n      _this.setupDragging();\n    }, _this.handleDrag = function (event) {\n      if (_this.prevPageX) {\n        var clientX = event.clientX;\n        var _this$refs7 = _this.refs,\n            view = _this$refs7.view,\n            trackHorizontal = _this$refs7.trackHorizontal;\n\n        var _trackHorizontal$getB = trackHorizontal.getBoundingClientRect(),\n            trackLeft = _trackHorizontal$getB.left;\n\n        var thumbWidth = _this.getThumbHorizontalWidth();\n        var clickPosition = thumbWidth - _this.prevPageX;\n        var offset = -trackLeft + clientX - clickPosition;\n        view.scrollLeft = _this.getScrollLeftForOffset(offset);\n      }\n      if (_this.prevPageY) {\n        var clientY = event.clientY;\n        var _this$refs8 = _this.refs,\n            _view = _this$refs8.view,\n            trackVertical = _this$refs8.trackVertical;\n\n        var _trackVertical$getBou = trackVertical.getBoundingClientRect(),\n            trackTop = _trackVertical$getBou.top;\n\n        var thumbHeight = _this.getThumbVerticalHeight();\n        var _clickPosition = thumbHeight - _this.prevPageY;\n        var _offset = -trackTop + clientY - _clickPosition;\n        _view.scrollTop = _this.getScrollTopForOffset(_offset);\n      }\n      return false;\n    }, _this.handleDragEnd = function () {\n      _this.dragging = false;\n      _this.prevPageX = _this.prevPageY = 0;\n      _this.teardownDragging();\n      _this.handleDragEndAutoHide();\n    }, _this.handleDragEndAutoHide = function () {\n      var autoHide = _this.props.autoHide;\n\n      if (!autoHide) return;\n      _this.hideTracks();\n    }, _this.handleTrackMouseEnter = function () {\n      _this.trackMouseOver = true;\n      _this.handleTrackMouseEnterAutoHide();\n    }, _this.handleTrackMouseEnterAutoHide = function () {\n      var autoHide = _this.props.autoHide;\n\n      if (!autoHide) return;\n      _this.showTracks();\n    }, _this.handleTrackMouseLeave = function () {\n      _this.trackMouseOver = false;\n      _this.handleTrackMouseLeaveAutoHide();\n    }, _this.handleTrackMouseLeaveAutoHide = function () {\n      var autoHide = _this.props.autoHide;\n\n      if (!autoHide) return;\n      _this.hideTracks();\n    }, _this.showTracks = function () {\n      var _this$refs9 = _this.refs,\n          trackHorizontal = _this$refs9.trackHorizontal,\n          trackVertical = _this$refs9.trackVertical;\n\n      clearTimeout(_this.hideTracksTimeout);\n      (0, _domCss2[\"default\"])(trackHorizontal, { opacity: 1 });\n      (0, _domCss2[\"default\"])(trackVertical, { opacity: 1 });\n    }, _this.hideTracks = function () {\n      if (_this.dragging) return;\n      if (_this.scrolling) return;\n      if (_this.trackMouseOver) return;\n      var autoHideTimeout = _this.props.autoHideTimeout;\n      var _this$refs10 = _this.refs,\n          trackHorizontal = _this$refs10.trackHorizontal,\n          trackVertical = _this$refs10.trackVertical;\n\n      clearTimeout(_this.hideTracksTimeout);\n      _this.hideTracksTimeout = setTimeout(function () {\n        (0, _domCss2[\"default\"])(trackHorizontal, { opacity: 0 });\n        (0, _domCss2[\"default\"])(trackVertical, { opacity: 0 });\n      }, autoHideTimeout);\n    }, _this.detectScrolling = function () {\n      if (_this.scrolling) return;\n      _this.scrolling = true;\n      _this.handleScrollStart();\n      _this.detectScrollingInterval = setInterval(function () {\n        if (_this.lastViewScrollLeft === _this.viewScrollLeft && _this.lastViewScrollTop === _this.viewScrollTop) {\n          clearInterval(_this.detectScrollingInterval);\n          _this.scrolling = false;\n          _this.handleScrollStop();\n        }\n        _this.lastViewScrollLeft = _this.viewScrollLeft;\n        _this.lastViewScrollTop = _this.viewScrollTop;\n      }, 100);\n    }, _this.raf = function (callback) {\n      if (_this.requestFrame) _raf2[\"default\"].cancel(_this.requestFrame);\n      _this.requestFrame = (0, _raf2[\"default\"])(function () {\n        _this.requestFrame = undefined;\n        callback();\n      });\n    }, _this.update = function (callback) {\n      _this.raf(function () {\n        return _this._update(callback);\n      });\n    }, _this._update = function (callback) {\n      var _this$props4 = _this.props,\n          onUpdate = _this$props4.onUpdate,\n          hideTracksWhenNotNeeded = _this$props4.hideTracksWhenNotNeeded;\n\n      var values = _this.getValues();\n      if ((0, _getScrollbarWidth2[\"default\"])()) {\n        var _this$refs11 = _this.refs,\n            thumbHorizontal = _this$refs11.thumbHorizontal,\n            thumbVertical = _this$refs11.thumbVertical,\n            trackHorizontal = _this$refs11.trackHorizontal,\n            trackVertical = _this$refs11.trackVertical;\n        var scrollLeft = values.scrollLeft,\n            clientWidth = values.clientWidth,\n            scrollWidth = values.scrollWidth;\n\n        var trackHorizontalWidth = (0, _getInnerWidth2[\"default\"])(trackHorizontal);\n        var thumbHorizontalWidth = _this.getThumbHorizontalWidth();\n        var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);\n        var thumbHorizontalStyle = {\n          width: thumbHorizontalWidth,\n          transform: 'translateX(' + thumbHorizontalX + 'px)'\n        };\n        var scrollTop = values.scrollTop,\n            clientHeight = values.clientHeight,\n            scrollHeight = values.scrollHeight;\n\n        var trackVerticalHeight = (0, _getInnerHeight2[\"default\"])(trackVertical);\n        var thumbVerticalHeight = _this.getThumbVerticalHeight();\n        var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);\n        var thumbVerticalStyle = {\n          height: thumbVerticalHeight,\n          transform: 'translateY(' + thumbVerticalY + 'px)'\n        };\n        if (hideTracksWhenNotNeeded) {\n          var trackHorizontalStyle = {\n            visibility: scrollWidth > clientWidth ? 'visible' : 'hidden'\n          };\n          var trackVerticalStyle = {\n            visibility: scrollHeight > clientHeight ? 'visible' : 'hidden'\n          };\n          (0, _domCss2[\"default\"])(trackHorizontal, trackHorizontalStyle);\n          (0, _domCss2[\"default\"])(trackVertical, trackVerticalStyle);\n        }\n        (0, _domCss2[\"default\"])(thumbHorizontal, thumbHorizontalStyle);\n        (0, _domCss2[\"default\"])(thumbVertical, thumbVerticalStyle);\n      }\n      if (onUpdate) onUpdate(values);\n      if (typeof callback !== 'function') return;\n      callback(values);\n    }, _this.render = function () {\n      var scrollbarWidth = (0, _getScrollbarWidth2[\"default\"])();\n      /* eslint-disable no-unused-vars */\n\n      var _this$props5 = _this.props,\n          onScroll = _this$props5.onScroll,\n          onScrollFrame = _this$props5.onScrollFrame,\n          onScrollStart = _this$props5.onScrollStart,\n          onScrollStop = _this$props5.onScrollStop,\n          onUpdate = _this$props5.onUpdate,\n          renderView = _this$props5.renderView,\n          renderTrackHorizontal = _this$props5.renderTrackHorizontal,\n          renderTrackVertical = _this$props5.renderTrackVertical,\n          renderThumbHorizontal = _this$props5.renderThumbHorizontal,\n          renderThumbVertical = _this$props5.renderThumbVertical,\n          tagName = _this$props5.tagName,\n          hideTracksWhenNotNeeded = _this$props5.hideTracksWhenNotNeeded,\n          autoHide = _this$props5.autoHide,\n          autoHideTimeout = _this$props5.autoHideTimeout,\n          autoHideDuration = _this$props5.autoHideDuration,\n          thumbSize = _this$props5.thumbSize,\n          thumbMinSize = _this$props5.thumbMinSize,\n          universal = _this$props5.universal,\n          autoHeight = _this$props5.autoHeight,\n          autoHeightMin = _this$props5.autoHeightMin,\n          autoHeightMax = _this$props5.autoHeightMax,\n          style = _this$props5.style,\n          children = _this$props5.children,\n          props = _objectWithoutProperties(_this$props5, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'onUpdate', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'tagName', 'hideTracksWhenNotNeeded', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'autoHeight', 'autoHeightMin', 'autoHeightMax', 'style', 'children']);\n      /* eslint-enable no-unused-vars */\n\n      var didMountUniversal = _this.state.didMountUniversal;\n\n\n      var containerStyle = _extends({}, _styles.containerStyleDefault, autoHeight && _extends({}, _styles.containerStyleAutoHeight, {\n        minHeight: autoHeightMin,\n        maxHeight: autoHeightMax\n      }), style);\n\n      var viewStyle = _extends({}, _styles.viewStyleDefault, {\n        // Hide scrollbars by setting a negative margin\n        marginRight: scrollbarWidth ? -scrollbarWidth : 0,\n        marginBottom: scrollbarWidth ? -scrollbarWidth : 0\n      }, autoHeight && _extends({}, _styles.viewStyleAutoHeight, {\n        // Add scrollbarWidth to autoHeight in order to compensate negative margins\n        minHeight: (0, _isString2[\"default\"])(autoHeightMin) ? 'calc(' + autoHeightMin + ' + ' + scrollbarWidth + 'px)' : autoHeightMin + scrollbarWidth,\n        maxHeight: (0, _isString2[\"default\"])(autoHeightMax) ? 'calc(' + autoHeightMax + ' + ' + scrollbarWidth + 'px)' : autoHeightMax + scrollbarWidth\n      }), autoHeight && universal && !didMountUniversal && {\n        minHeight: autoHeightMin,\n        maxHeight: autoHeightMax\n      }, universal && !didMountUniversal && _styles.viewStyleUniversalInitial);\n\n      var trackAutoHeightStyle = {\n        transition: 'opacity ' + autoHideDuration + 'ms',\n        opacity: 0\n      };\n\n      var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {\n        display: 'none'\n      });\n\n      var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide && trackAutoHeightStyle, (!scrollbarWidth || universal && !didMountUniversal) && {\n        display: 'none'\n      });\n\n      return (0, _preact.h)(tagName, _extends({}, props, { style: containerStyle, ref: function ref(r) {\n          _this.refs.container = r;\n        } }), [(0, _preact.cloneElement)(renderView({ style: viewStyle }), { key: 'view', ref: function ref(r) {\n          _this.refs.view = r;\n        } }, children), (0, _preact.cloneElement)(renderTrackHorizontal({ style: trackHorizontalStyle }), { key: 'trackHorizontal', ref: function ref(r) {\n          _this.refs.trackHorizontal = r;\n        } }, (0, _preact.cloneElement)(renderThumbHorizontal({ style: _styles.thumbHorizontalStyleDefault }), { ref: function ref(r) {\n          _this.refs.thumbHorizontal = r;\n        } })), (0, _preact.cloneElement)(renderTrackVertical({ style: trackVerticalStyle }), { key: 'trackVertical', ref: function ref(r) {\n          _this.refs.trackVertical = r;\n        } }, (0, _preact.cloneElement)(renderThumbVertical({ style: _styles.thumbVerticalStyleDefault }), { ref: function ref(r) {\n          _this.refs.thumbVertical = r;\n        } }))]);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Scrollbars, [{\n    key: 'componentDidMountUniversal',\n    value: function componentDidMountUniversal() {\n      // eslint-disable-line react/sort-comp\n      var universal = this.props.universal;\n\n      if (!universal) return;\n      this.setState({ didMountUniversal: true });\n    }\n  }, {\n    key: 'unsetDomStyles',\n    value: function unsetDomStyles() {\n      var _refs = this.refs,\n          thumbHorizontal = _refs.thumbHorizontal,\n          thumbVertical = _refs.thumbVertical,\n          trackHorizontal = _refs.trackHorizontal,\n          trackVertical = _refs.trackVertical;\n\n      var stylesReset = {\n        width: '',\n        height: '',\n        transform: '',\n        opacity: '',\n        visibility: ''\n      };\n      (0, _domCss2[\"default\"])(thumbVertical, stylesReset);\n      (0, _domCss2[\"default\"])(thumbHorizontal, stylesReset);\n      (0, _domCss2[\"default\"])(trackVertical, stylesReset);\n      (0, _domCss2[\"default\"])(trackHorizontal, stylesReset);\n    }\n  }]);\n\n  return Scrollbars;\n}(_preact.Component);\n\nScrollbars.defaultProps = {\n  renderView: _defaultRenderElements.renderViewDefault,\n  renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,\n  renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,\n  renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,\n  renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,\n  tagName: 'div',\n  thumbMinSize: 30,\n  hideTracksWhenNotNeeded: false,\n  autoHide: false,\n  autoHideTimeout: 1000,\n  autoHideDuration: 200,\n  autoHeight: false,\n  autoHeightMin: 0,\n  autoHeightMax: 200,\n  universal: false\n};\nexports[\"default\"] = Scrollbars;"},"sourceMaps":null,"error":null,"hash":"11809f56bbee0fe5562ddc4bf8431051","cacheData":{"env":{}}}